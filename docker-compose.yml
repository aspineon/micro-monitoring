version: '3.5'

services:
  # === LOGS ===
  elasticsearch:
    image:  docker.elastic.co/elasticsearch/elasticsearch:7.2.0

    # load config stored in repository
    # uncomment when needed
    # volumes:
    #   - ./configs/elasticsearch/elasticsearch.yml:/usr/share/elasticserach/config/elasticsearch.yml:ro 
    environment:
      - discovery.type=single-node #run elasticsearch as a standalone server, not a node
    ulimits:
      memlock: #set unlimited memory for processes. Required by elasticsearch
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300

  logstash:
    image: docker.elastic.co/logstash/logstash:7.2.0
    volumes:
    # load config shored in repository
    # uncomment when needed
    #  - ./configs/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro

    # Folder with Logstash pipeline configs
      - ./configs/logstash/:/usr/share/logstash/pipeline:ro
    ports:
      - 5000:5000
      - 9600:9600
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0

    #load config stored in repository
    # uncomment when needed
    # volumes:
    #   - ./configs/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro 
    ports:
      - 5601:5601

  # === MONITORING ===
    # monitoring and alerting toolkit
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./configs/prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
      - node-exporter
      - rabbit-exporter
    restart: always

    # analytics and monitoring platform
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./configs/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./configs/grafana/config.monitoring
    restart: always

    # host metrics exporter
  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command:
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always

    # collects containers metrics
  cadvisor:
    image: google/cadvisor:latest
    volumes:
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    restart: always

    # rabbitmq metrics exporter
  rabbit-exporter:
    image: kbudde/rabbitmq-exporter
    network_mode: service:rabbit
    environment:
      RABBIT_USER: "rabbitmq"
      RABBIT_PASSWORD: "rabbitmq"
    depends_on:
      - rabbit

  # === SERVICES ===
  rabbit:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - 15672:15672
      - 5672:5672
      - 9419:9419